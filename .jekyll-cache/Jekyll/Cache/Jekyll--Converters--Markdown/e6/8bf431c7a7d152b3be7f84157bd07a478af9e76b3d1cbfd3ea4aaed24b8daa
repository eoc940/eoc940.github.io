I"e<p>Make Jelly site have a GitBook look!</p>

<h2 id="demo">Demo</h2>

<p>Live demo on Github Pages: <a href="https://sighingnow.github.io/jekyll-gitbook">https://sighingnow.github.io/jekyll-gitbook</a></p>

<p><a href="https://jekyll-themes.com/jekyll-gitbook/"><img src="https://img.shields.io/badge/featured%20on-JekyllThemes-red.svg" alt="Jekyll Themes" /></a></p>

<h2 id="why-jekyll-with-gitbook">Why Jekyll with GitBook</h2>

<p>GitBook is an amazing frontend style to present and organize contents (such as book chapters
and blogs) on Web. The typical to deploy GitBook at <a href="https://pages.github.com">Github Pages</a>
is building HTML files locally and then push to Github repository, usually to the <code class="language-plaintext highlighter-rouge">gh-pages</code>
branch. Itâ€™s quite annoying to repeat such workload and make it hard for people do version
control via git for when there are generated HTML files to be staged in and out.</p>

<p>This theme takes style definition out of generated GitBook site and provided the template
for Jekyll to rendering markdown documents to HTML, thus the whole site can be deployed
to <a href="https://pages.github.com">Github Pages</a> without generating and uploading HTML bundle every time when there are
changes to the original repo.</p>

<h2 id="how-to-get-started">How to Get Started</h2>

<p>This theme can be used just as other <a href="https://pages.github.com">Jekyll themes</a>.</p>

<p><a href="https://github.com/sighingnow/jekyll-gitbook/fork">Fork</a> this repository and add your markdown posts to the <code class="language-plaintext highlighter-rouge">_posts</code> folder.</p>

<h3 id="deploy-locally-with-jekyll-serve">Deploy Locally with Jekyll Serve</h3>

<p>This theme can be ran locally using Ruby and Gemfiles.</p>

<p><a href="https://docs.github.com/en/pages/setting-up-a-github-pages-site-with-jekyll/testing-your-github-pages-site-locally-with-jekyll">Testing your GitHub Pages site locally with Jekyll</a> - GitHub</p>

<h2 id="full-text-search">Full-text search</h2>

<p>The search functionality in jekyll-gitbook theme is powered by the <a href="https://github.com/gitbook-plugins/gitbook-plugin-search-pro">gitbook-plugin-search-pro</a> plugin and is enabled by default.</p>

<p><a href="https://sighingnow.github.io/jekyll-gitbook/?q=generated">https://sighingnow.github.io/jekyll-gitbook/?q=generated</a></p>

<h2 id="code-highlight">Code highlight</h2>

<p>The code highlight style is configurable the following entry in <code class="language-plaintext highlighter-rouge">_config.yaml</code>:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">syntax_highlighter_style</span><span class="pi">:</span> <span class="s">colorful</span>
</code></pre></div></div>

<p>The default code highlight style is <code class="language-plaintext highlighter-rouge">colorful</code>, the full supported styles can be found from <a href="https://github.com/rouge-ruby/rouge/tree/master/lib/rouge/themes">the rouge repository</a>. Customized
style can be added to <a href="./gitbook/rouge/">./gitbook/rouge/</a>.</p>

<h2 id="how-to-generate-toc">How to generate TOC</h2>

<p>The jekyll-gitbook theme leverages <a href="https://github.com/allejo/jekyll-toc">jekyll-toc</a> to generate the <em>Contents</em> for the page.
The TOC feature is not enabled by default. To use the TOC feature, modify the TOC
configuration in <code class="language-plaintext highlighter-rouge">_config.yml</code>:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">toc</span><span class="pi">:</span>
    <span class="na">enabled</span><span class="pi">:</span> <span class="no">true</span>
</code></pre></div></div>

<h2 id="license">License</h2>

<p>This work is open sourced under the Apache License, Version 2.0.</p>

<p>Copyright 2019 Tao He.</p>

:ET